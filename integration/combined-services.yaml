apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: manish1990786/user-service:latest
        ports:
        - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  type: NodePort
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
      # nodePort: 31001

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: ashish010598/order-service:latest
        ports:
        - containerPort: 3002
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  type: NodePort
  selector:
    app: order-service
  ports:
    - protocol: TCP
      port: 3002
      targetPort: 3002
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - name: product-service
        image: divyanjalinalawade/product-service:latest
        ports:
        - containerPort: 5000
        env:
            - name: MONGO_URI
              value: "mongodb://admin:admin@host.docker.internal:27017"

---
apiVersion: v1
kind: Service
metadata:
  name: product-service
spec:
  type: NodePort
  selector:
    app: product-service
  ports:
    - protocol: TCP
      port: 3004
      targetPort: 5000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
      - name: payment-service
        image: munishbits/payment-service:v1
        ports:
        - containerPort: 3003
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://host.docker.internal:3306/payment_service_db
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: payment-service-secrets
              key: SPRING_DATASOURCE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: payment-service-secrets
              key: SPRING_DATASOURCE_PASSWORD
        - name: razorpay.webhook.secret
          valueFrom:
            secretKeyRef:
              name: payment-service-secrets
              key: razorpay.webhook.secret
        - name: razorpay.key_id
          valueFrom:
            secretKeyRef:
              name: payment-service-secrets
              key: razorpay.key_id
        - name: razorpay.key_secret
          valueFrom:
            secretKeyRef:
              name: payment-service-secrets
              key: razorpay.key_secret
        - name: SPRING_JPA_HIBERNATE_DDL_AUTO
          value: update
        
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
spec:
  type: NodePort
  selector:
    app: payment-service
  ports:
    - protocol: TCP
      port: 3003
      targetPort: 3003